Shuffling
1. Moving data around network ( groupByKey expensive )
2. Reduce by key reduces shuffling

Partitioning
1. Data within an RDD is split into several partitions

Properties of partitions
1. partitions never span multiple machines.
2. Each machine in the cluster contains one or more partitions
3, Number of partitions to use is configurable

Hash partitioning
hashcode % number of partitions

Range Partitioning
When keys have some sort of order, sorted ranges of key

partitionsBy => creates RDD with specific partitioner


HashPartitioner ( used with joins to reduce shuffles )

Wide Vs Narrow Dependencies
1. Avoid or reduce shuffling

Lineages
Group of computations as LineageGraph( DAG )

RDD compositions
1. Partitions -> Atomic pieces of dataset one or many compute node.
2. Dependencies -> Models relattionship between this RDD and its partitions with the RDDs it was derived from
3. Function -> for computing the dataset based on its parent RDD
4, Metadata ->

Narrow dependency -> Each partition of the parent RDD is used by at most on partition of the child RDD

Wide dependency -> Each partition of the parent RDD may be depended on by multiple child partiitions

